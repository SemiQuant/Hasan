"0","import pysam"
"0","from collections import Counter"
"0","import pandas as pd"
"0","# samfile = pysam.AlignmentFile(""/Users/SemiQuant/Downloads/BDQ_haplo/TB-B240-054_S26-bowtie2.bam"", ""rb"")"
"0","samfile = pysam.AlignmentFile(""/Users/SemiQuant/Bioinformatics/Projects/Hasan/test/test2/test_pairedBWA_sorted.bam"", ""rb"")"
"0",""
"0","# var_dic will be snps/indels, if also adding reference then edit the below"
"0","# import numpy as np"
"0","# vant = np.loadtxt(""/Users/SemiQuant/Bioinformatics/Projects/Hasan/snps.tsv"", delimiter=""\t"", "
"0","#           dtype={'names': ('CHROM', 'POS', 'REF', 'ALT', 'TYPE'),"
"0","#           'formats': ('<U100', 'int', 'U10', 'U10', 'U10')}, skiprows=1)"
"0","var_dic = {}"
"0","# this is gross, but i dont really speak python "
"0","# with open(""/Users/SemiQuant/Bioinformatics/Projects/Hasan/snps.tsv"") as f:"
"0","with open(""/Users/SemiQuant/Bioinformatics/Projects/Hasan/test/test2/snps.tsv"") as f:"
"0","    next(f) # skip header line"
"0","    for line in f:"
"0","        (CHROM, POS, REF, ALT, TYPE) = line.split()"
"0","        try:"
"0","            var_dic[CHROM][int(POS)].setdefault('call', []).append(ALT)"
"0","        except:"
"0","            try:"
"0","                var_dic[CHROM][int(POS)] = {'call' : [ALT]}"
"0","            except:"
"0","                var_dic[CHROM] = {int(POS) : {'call' : [ALT]}}"
"0",""
"1","'CHROM\tPOS\tREF\tALT\tTYPE\n'
"
"0","# var_dic={'rpoC': {1221: {'call': ['T']}}, 'Rv0678_amplicon4': {111: {'call': ['A', 'G', 'G', 'T']}, 112: {'call': ['G', '-']}, 114: {'call': ['C']}, 116: {'call': ['C']}}}var_dic={'rpoC': {1221: {'call': ['T']}}, 'Rv0678_amplicon4': {111: {'call': ['A', 'G', 'G', 'T']}, 112: {'call': ['G', '-']}, 114: {'call': ['C']}, 116: {'call': ['C']}}}"
"0",""
"0","# this is like this as I dont really know pysam and how to do it cleaner, with also getting readnames"
"0","for chrom in var_dic:"
"0","    if chrom not in samfile.references:"
"0","        print(chrom, "" not found in bam file!"")"
"0","    else:"
"0","        for i in var_dic[chrom]:"
"0","            for pileupcolumn in samfile.pileup(chrom, i, i+1):"
"0","                for pileupread in pileupcolumn.pileups:"
"0","                    try:"
"0","                        if pileupread.alignment.get_reference_positions()[pileupread.query_position] == i:"
"0","                        # if pileupread.query_position == i:"
"0","                            if not pileupread.is_del: # if reference then add"
"0","                                read_call_tmp = pileupread.alignment.query_sequence[pileupread.query_position]"
"0","                                try:"
"0","                                    #  check if it matches the call in there as pairs have same name"
"0","                                    if read_call_tmp == var_dic[chrom][i][pileupread.alignment.query_name]:"
"0","                                        break"
"0","                                    else:"
"0","                                        var_dic[chrom][i][pileupread.alignment.query_name] = ""N"""
"0","                                except:"
"0","                                    if read_call_tmp in var_dic[chrom][i][""call""]:"
"0","                                        var_dic[chrom][i][pileupread.alignment.query_name] = read_call_tmp"
"0","                                    else:"
"0","                                        var_dic[chrom][i][pileupread.alignment.query_name] = ""N"""
"0","                                # elif not pileupread.is_refskip: #if reference then add, not sure if this is working, it isnt so adding the reference to the dic?"
"0","                                #         var_dic[chrom][i][pileupread.alignment.query_name] = read_call_tmp"
"0","                            else:"
"0","                                try:"
"0","                                    #  check if it matches the call in there as pairs have same name"
"0","                                    if read_call_tmp == var_dic[chrom][i][pileupread.alignment.query_name]:"
"0","                                        break"
"0","                                    else:"
"0","                                        var_dic[chrom][i][pileupread.alignment.query_name] = ""N"""
"0","                                except:"
"0","                                    if read_call_tmp == var_dic[chrom][i][pileupread.alignment.query_name]:"
"0","                                        break"
"0","                                    else:"
"0","                                        var_dic[chrom][i][pileupread.alignment.query_name] = ""-"""
"0","                    except:"
"0","                        pass"
"0",""
"0","# var_df = pd.DataFrame.from_dict(var_dic)"
